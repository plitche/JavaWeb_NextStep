	6.4 MVC 프레임워크
		* JSP 로직의 웹 애플리케이션 개발은 복잡도 증가로 인하여 유지보수 비용이 증가했다.
		  이 단점을 보완하기 위해 MVC(Model, View, Controller) 패턴 기반이 등장했다.
		  
		* JSP에 집중되었떤 로직을 Model, View, Controller 3개의 역할로 분리하여 개발 하는것이다.
		
		* 웹 애플리케이션 개발에 MVC 패턴을 적용할 경우 클라이언트의 요청이 처음 진입하는 부분이 컨트롤러이다.
		  MVC 패턴 적용 전에는 View에 해당하는 JSP가 클라이언트가 처음 진입하는 부분이었다.
		  MVC 패턴을 적용하면 대부분의 로직은 Controller와 Model이 담당하고,
		  View에 해당하는 JSP는 컨트롤러에서 전달한 데이터를 출력하는 로직만 포함하고 있다.
		  
		* MVC 패턴을 적용한 코드와 그렇지 않은 코드가 섞여 있을 경우 일관성이 떨어져 유지보수가 어렵다.