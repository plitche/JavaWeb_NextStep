	5.1.2.1 HTTP 웹 서버 리팩토링 실습 - 요청 데이터를 처리하는 로직을 별도의 클래스로 분리한다(HttpRequest)
		* Hint
			- 클라이언트 요청 데이터를 담고 있는 InputStream을 생성자로 받아 HTTP 메소드, URL, 헤더, 본문을 분리하는 작업을 한다.
			- 헤더는 Map<String, String>에 저장해 관리하고 getHeader("필드 이름")메소드를 통해 접근 가능하도록 구현한다.
			- GET과 POST 메소드에 따라 전달되는 인자를 Map<String, String>에 저장해 관리하고 getParameter("인자 이름") 메소드를 통해 접근 가능하도록 구현한다.
			
		* Process
			- src/test/resources 디렉토리에 Http_GET.txt라는 이름으로 요청 데이터를 담고 있는 테스트 파일을 추가한다.
			- Http_GET.txt 파일의 마지막 라인에 빈 공백 문자열을 포함한다.
			- 테스트를 위한 HTTP 요청 데이터를 텍스트 파일에 생성한 후 FileInputStream으로 읽은 후 이 INputStream을 새로 생성한 HttpRequest 클래스의 생성자로 전달하는 방식으로 테스트할 수 있다.
			- GET에 대한 테스트뿐만 아니라 POST에 대한 테스트 데이터(Http_POST.txt)를 추가해 테스트 할 수 있다.
			
			- GET과 POST에 대한 테스트코드를 만족하는 HttpRequest 코드를 구현하면 된다.
		