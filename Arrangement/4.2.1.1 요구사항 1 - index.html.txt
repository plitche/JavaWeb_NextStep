	4.2.1.1 요구사항 1 - index.html
		* http://localhost:8080/index.html로 접속했을 때 webapp 디렉토리의 index.html 파일을 읽어 클라이언트에 응답한다.
		
		* try () :
            jdk 7버전부터 stream과 같은 자원은 사용한 다음에 close를 해야한다.
            try절의 body에 해당하는 부분이 끝나면 자동으로 close를 해준다.
            InputStream, OutputStream이 Closeable를 구현하고 있음으로 가능하다.

		* 웹 클라이언트는 웹 서버와 데이터를 주고 받기 위해 HTTP라는 서로 간에 약속된 규약을 따른다.
		  웹 클라이언트가 웹 서버에 요청을 보내기 위한 규약은 아래와 같다.
		  
		  - 요청 라인
		  POST /user/create HTTP/1.1
		  
		  - 요청 헤더
		  HOST : localhost:8080
		  Connection-length: 59
		  Content-Type: application/x-www.form-urlencoded
		  Accept: */*
		  
		  - 요청 본문
		  userId=javajigi&password=password
		  
		1. 요청 라인
			- HTTP-메소드 URI HTTP-버전 으로 구성
			- HTTP 메소드는 요청의 종류
			- URI는 클라이언트가 서버에 유일하게 식별할 수 있는 요청 자원의 경로
			- HTTP-버너은 현재 요청의 HTTP 버전으로 현재 HTTP/1.1이 주로 사용되고 있다.
			
		2. 요청 헤더
			- <필드 이름> : <필드 값> 쌍으로 이루어져 있다.
			  필드 이름 하나에 여러 개의 필드 값을 전달받고 싶다면 ,를 구분자로 전달할 수 있다.
			  ex) <필드이름>: <필드 값1>, <필드 값2>
			
		  
		* 응답 메시지
		  - 상태 라인
		  HTTP/1.1 200 OK
		  
		  - 응답 헤더
		  Content-Type: text/html;charset-utf-8
		  COntent-Length: 20
		  
		  - 응답 본문
		  <h1>Hello World</h1>
		  
		3. 상태 라인
			- HTTP-버전 상태코드 응답구문 으로 구성
			- 상태 코드는 응답에 대한 상태를 의미하는 코드 값1
		
		
		
		
		* 클라이언트가 요청하는 자원이 무엇인지 분리를 할 필요가 있다.
			- GET /index.html HTTP/1.1 => index.html
			
		* 클라이언트의 요청 URI에 해당하는 자원을 읽어 응답으로 보내면 된다.
		* 하지만 클라이언트의 요청이 /index.html 하나만 보냈는데 여러개의 요청이 온다.
			- 서버가 웹 페이즈를 구성하는 모든 자원(HTML, CSS, js, image 등)을 한번에 응답으로 보내지 않기 때문
		










			
		  